# define min version of cmake
cmake_minimum_required(VERSION 3.0)
# define the project name
project(CALC)

# set minium c++ version, attention to the variable name of CMAKE_CXX_STANDARD which is pre-defined by cmake
# set also can define customed variable
set(CMAKE_CXX_STANDARD 11)

# define the executable app of the project generated by cmake,
# EXECUTABLE_OUTPUT_PATH is also pre-defined  by cmake
# set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)

# include the head file 
include_directories(${PROJECT_SOURCE_DIR}/include)

# from the location of CMakeLists.txt, search all file in the path of src. and define the variable name SRC_LIST
# aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src SRC_LIST)
file(GLOB SRC_LIST ${PROJECT_SOURCE_DIR}/src/*.cpp)

# other you can include *.cpp and *.h by following method, MAIN_SRC is customed
# file(GLOB MAIN_SRC ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
# file(GLOB MAIN_HEAD ${CMAKE_CURRENT_SOURCE_DIR}/include/*.h)

# 设置动态库生成路径 也是可执行文件生成的位置
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
add_library(calc SHARED ${SRC_LIST}) 

# 将SRC_LIST下的文件生成libcalc.a的静态库 并放置到lib下
# set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
# add_library(calc STATIC ${SRC_LIST})
# 包含静态库路径放置
# link_directories(${PROJECT_SOURCE_DIR}/lib)
# link_libraries(calc)

file(GLOB MAIN_CPP ${PROJECT_SOURCE_DIR}/main.cpp)
set(TARGET_EXECUTABLE ${MAIN_CPP})

# 设置bin路径
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)
add_executable(app ${TARGET_EXECUTABLE})

# 动态库需要加上
target_link_libraries(app calc)














